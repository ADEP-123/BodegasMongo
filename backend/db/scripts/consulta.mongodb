const currentDate = new Date();
//Consultas

//1. Listar todas las bodegas alfabÃ©ticamente
use("db_bodegas_mongo");
db.bodegas.aggregate([
    {
        $project: {
            ID: "$_id",
            Bodega_Nombre: "$nombre",
            Responsable_ID: "$id_responsable",
            Estado: "$estado",
            Creado_Por: "$created_by",
            Actualizado_Por: "$update_by",
            Fecha_Creacion: "$created_at",
            Fecha_Actualizacion: "$update_by",
            Fecha_Eliminacion: "$deleted_at"
        }
    },
    {
        $sort: {
            nombre: 1
        }
    }
]);

//2. Crear una bodega
use("db_bodegas_mongo");
db.bodegas.insertOne({
    _id: 1,
    nombre: "Bodega A",
    id_responsable: 101,
    estado: 1,
    created_by: 201,
    update_by: null,
    created_at: currentDate,
    updated_at: currentDate,
    deleted_at: null
});

//3. Listar productos en orden descendente por el campo total
use("db_bodegas_mongo");
db.inventarios.aggregate([
    {
        $lookup: {
            from: "productos",
            localField: "id_producto",
            foreignField: "_id",
            as: "product_info"
        }
    },
    {
        $unwind: "$product_info"
    },
    {
        $group: {
            _id: "$id_producto",
            total: { $sum: "$cantidad" },
            inventarios: { $push: "$$ROOT" },
            Producto_ID: { $first: "$product_info._id" },
            Producto_Nombre: { $first: "$product_info.nombre" },
            Descripcion: { $first: "$product_info.descripcion" }
        }
    },
    {
        $project: {
            _id: 0,
            Producto_ID: 1,
            Producto_Nombre: 1,
            Descripcion: 1,
            total: 1
        }
    }
]);

//4. Insertar un producto y asigne una cantidad inicial del mismo en la tabla inventarios en una de las bodegas por default
use("db_bodegas_mongo");
db.productros.insertOne({
    _id: 4521,
    nombre: 'producto0',
    descripcion: 'producto0',
    estado: 1,
    created_by: 16,
    update_by: null,
    created_at: currentDate,
    updated_at: currentDate,
    deleted_at: null
});

db.inventarios.insertOne({
    _id: 122313,
    id_bodega: 12,
    id_producto: 4521,
    cantidad: 100,
    created_by: null,
    created_at: currentDate,
    updated_at: null,
    deleted_at: null
});

//5. Permita insertar registros en la tabla inventarios, debe validar si la combinacion bodega producto ya existe
use("db_bodegas_mongo");
const bodega = 11;
const producto = 18;
const total = db.inventarios.countDocuments({ id_bodega: bodega, id_producto: producto })
if (total == 0) {
    db.inventarios.insertOne({
        _id: 122313,
        id_bodega: bodega,
        id_producto: producto,
        cantidad: 100,
        created_by: null,
        created_at: currentDate,
        updated_at: null,
        deleted_at: null
    });
}

//6. Query que permita trasladar cantidades de un producto de  una bodega a otra, debe validar que la cantidad a trasladar exista en la bodega de donde sale si no enviar un mensaje

use("db_bodegas_mongo");
const cantidad = 100;
const bodega1 = 12;
const bodega2 = 12;
const productoId = 18;
db.inventarios.aggregate([
    {
        $match: { id_bodega: bodega1, id_producto: productoId }
    },
    {
        $project: {
            _id: 0,
            cantidad: 1,
        }
    }
]);

// aca iria uno que valide que exista un resultado y extraiga la cantidad
const cantidadExistene = 50

if (cantidadExistene > cantidad) {
    //validamos que exista en la bodega 2
    db.inventarios.aggregate([
        {
            $match: { id_bodega: bodega2, id_producto: productoId }
        },
        {
            $project: {
                _id: 0,
                cantidad: 1,
            }
        }
    ]);
    db.inventarios.updateOne(
        { _id: bodega1 },
        { $set: { cantidad: { $subtract: ["$cantidad", cantidad] } } }
    );
    //aca se validaria si existe entonces haga esto
    db.inventarios.updateOne(
        { _id: bodega2 },
        { $set: { cantidad: { $add: ["$cantidad", cantidad] } } }
    );
    // Si no existe haga esto
    db.inventarios.insertOne({
        _id: 2311123456,
        id_bodega: id_bodega2,
        id_producto: productoId,
        cantidad: cantidad,
        created_by: null,
        created_at: currentDate,
        updated_at: null,
        deleted_at: null
    });
}

